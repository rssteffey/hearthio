{"version":3,"sources":["meteor://ðŸ’»app/lib/controllers/home_controller.js"],"names":[],"mappings":";;;;;;;;AAAA,cAAc,GAAG,eAAe,CAAC,MAAM,CAAC;;;;;;;AAOtC,eAAa,EAAE,YAAW,EACzB;;;;;;;AAOD,QAAM,EAAE,YAAY,EACnB;;;;;;;;AAQD,MAAI,EAAE,YAAY,EACjB;;;;AAID,OAAK,EAAE,YAAY;AACjB,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,SAAO,EAAE,YAAY;AACnB,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,gBAAc,EAAE,YAAY;AAC1B,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;;;;;;;;;;AAUD,QAAM,EAAE,YAAY;AAClB,QAAI,CAAC,MAAM,EAAE,CAAC;GACf;AACD,eAAa,EAAE,YAAY,EAC1B;AACD,QAAM,EAAE,YAAY,EACnB;CACF,CAAC,CAAC,sE","file":"/lib/controllers/home_controller.js","sourcesContent":["HomeController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n"]}