[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/controllers/home_controller.js                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nHomeController = RouteController.extend({                              // 1\n                                                                       //\n  // A place to put your subscriptions                                 //\n  // this.subscribe('items');                                          //\n  // // add the subscription to the waitlist                           //\n  // this.subscribe('item', this.params._id).wait();                   //\n                                                                       //\n  subscriptions: function () {},                                       // 8\n                                                                       //\n  // Subscriptions or other things we want to \"wait\" on. This also     //\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.                   //\n  // return Meteor.subscribe('post', this.params._id);                 //\n                                                                       //\n  waitOn: function () {},                                              // 16\n                                                                       //\n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.  //\n  // return Posts.findOne({_id: this.params._id});                     //\n                                                                       //\n  data: function () {},                                                // 25\n                                                                       //\n  // You can provide any of the hook options                           //\n                                                                       //\n  onRun: function () {                                                 // 30\n    this.next();                                                       // 31\n  },                                                                   //\n  onRerun: function () {                                               // 33\n    this.next();                                                       // 34\n  },                                                                   //\n  onBeforeAction: function () {                                        // 36\n    this.next();                                                       // 37\n  },                                                                   //\n                                                                       //\n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.                                            //\n  // Example:                                                          //\n  //  action: 'myActionFunction'                                       //\n                                                                       //\n  action: function () {                                                // 48\n    this.render();                                                     // 49\n  },                                                                   //\n  onAfterAction: function () {},                                       // 51\n  onStop: function () {}                                               // 53\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/controllers/home_controller.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/controllers/home_controller.js"],"names":[],"mappings":";;;;;;;;AAAA,cAAc,GAAG,eAAe,CAAC,MAAM,CAAC;;;;;;;AAOtC,eAAa,EAAE,YAAW,EACzB;;;;;;;AAOD,QAAM,EAAE,YAAY,EACnB;;;;;;;;AAQD,MAAI,EAAE,YAAY,EACjB;;;;AAID,OAAK,EAAE,YAAY;AACjB,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,SAAO,EAAE,YAAY;AACnB,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;AACD,gBAAc,EAAE,YAAY;AAC1B,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;;;;;;;;;;AAUD,QAAM,EAAE,YAAY;AAClB,QAAI,CAAC,MAAM,EAAE,CAAC;GACf;AACD,eAAa,EAAE,YAAY,EAC1B;AACD,QAAM,EAAE,YAAY,EACnB;CACF,CAAC,CAAC,sE","file":"/lib/controllers/home_controller.js","sourcesContent":["HomeController = RouteController.extend({\n  \n  // A place to put your subscriptions\n  // this.subscribe('items');\n  // // add the subscription to the waitlist\n  // this.subscribe('item', this.params._id).wait();\n  \n  subscriptions: function() {\n  },\n  \n  // Subscriptions or other things we want to \"wait\" on. This also\n  // automatically uses the loading hook. That's the only difference between\n  // this option and the subscriptions option above.\n  // return Meteor.subscribe('post', this.params._id);\n  \n  waitOn: function () {\n  },\n  \n  // A data function that can be used to automatically set the data context for\n  // our layout. This function can also be used by hooks and plugins. For\n  // example, the \"dataNotFound\" plugin calls this function to see if it\n  // returns a null value, and if so, renders the not found template.\n  // return Posts.findOne({_id: this.params._id});\n  \n  data: function () {\n  },\n  \n  // You can provide any of the hook options\n  \n  onRun: function () {\n    this.next();\n  },\n  onRerun: function () {\n    this.next();\n  },\n  onBeforeAction: function () {\n    this.next();\n  },\n  \n  // The same thing as providing a function as the second parameter. You can\n  // also provide a string action name here which will be looked up on a Controller\n  // when the route runs. More on Controllers later. Note, the action function\n  // is optional. By default a route will render its template, layout and\n  // regions automatically.\n  // Example:\n  //  action: 'myActionFunction'\n  \n  action: function () {\n    this.render();\n  },\n  onAfterAction: function () {\n  },\n  onStop: function () {\n  }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/methods.js                                                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/*****************************************************************************/\n/*  Client and Server Methods */                                       //\n/*****************************************************************************/\n                                                                       //\nMeteor.methods({                                                       // 5\n  'lib/method_name': function () {                                     // 6\n                                                                       //\n    if (this.isSimulation) {}                                          // 8\n    //   // do some client stuff while waiting for                     //\n    //   // result from server.                                        //\n    //   return;                                                       //\n                                                                       //\n    // server method logic                                             //\n  }                                                                    // 12\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/methods.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/methods.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,MAAM,CAAC,OAAO,CAAC;AACb,mBAAiB,EAAE,YAAY;;AAE7B,QAAI,IAAI,CAAC,YAAY,EAAE,EAItB;;;;;;AAAA,GAEF;CACF,CAAC,CAAC,sE","file":"/lib/methods.js","sourcesContent":["/*****************************************************************************/\n/*  Client and Server Methods */\n/*****************************************************************************/\n\nMeteor.methods({\n  'lib/method_name': function () {\n    \n    if (this.isSimulation) {\n    //   // do some client stuff while waiting for\n    //   // result from server.\n    //   return;\n    }\n    // server method logic\n  }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/routes.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nRouter.configure({                                                     // 1\n  layoutTemplate: 'MasterLayout',                                      // 2\n  loadingTemplate: 'Loading',                                          // 3\n  notFoundTemplate: 'NotFound'                                         // 4\n});                                                                    //\n                                                                       //\nRouter.route('/', {                                                    // 8\n  name: 'home',                                                        // 9\n  controller: 'HomeController',                                        // 10\n  where: 'client'                                                      // 11\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/routes.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/routes.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,SAAS,CAAC;AACf,gBAAc,EAAE,cAAc;AAC9B,iBAAe,EAAE,SAAS;AAC1B,kBAAgB,EAAE,UAAU;CAC7B,CAAC,CAAC;;AAGH,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;AAChB,MAAI,EAAE,MAAM;AACZ,YAAU,EAAE,gBAAgB;AAC5B,OAAK,EAAE,QAAQ;CAChB,CAAC,CAAC,sE","file":"/lib/routes.js","sourcesContent":["Router.configure({\n  layoutTemplate: 'MasterLayout',\n  loadingTemplate: 'Loading',\n  notFoundTemplate: 'NotFound'\n});\n\n\nRouter.route('/', {\n  name: 'home',\n  controller: 'HomeController',\n  where: 'client'\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/bootstrap.js                                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.startup(function () {});                                        // 1\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/bootstrap.js","sourceMap":{"version":3,"sources":["/server/bootstrap.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC,YAAY,EAC1B,CAAC,CAAC,4C","file":"/server/bootstrap.js","sourcesContent":["Meteor.startup(function () {\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/methods.js                                                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/*****************************************************************************/\n/*  Server Methods */                                                  //\n/*****************************************************************************/\n                                                                       //\nMeteor.methods({                                                       // 5\n  'server/method_name': function () {                                  // 6\n    // server method logic                                             //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/methods.js","sourceMap":{"version":3,"sources":["/server/methods.js"],"names":[],"mappings":";;;;;;;;;;;;AAIA,MAAM,CAAC,OAAO,CAAC;AACb,sBAAoB,EAAE,YAAY;;GAEjC;CACF,CAAC,CAAC,sE","file":"/server/methods.js","sourcesContent":["/*****************************************************************************/\n/*  Server Methods */\n/*****************************************************************************/\n\nMeteor.methods({\n  'server/method_name': function () {\n    // server method logic\n  }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/publish.js                                                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/publish.js","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/server/publish.js"}}]